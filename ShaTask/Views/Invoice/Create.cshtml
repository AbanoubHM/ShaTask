@model ShaTask.DbModels.InvoiceHeader

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>
<h4>InvoiceHeader</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label asp-for="CustomerName" class="control-label"></label>
                <input asp-for="CustomerName" class="form-control" />
                <span asp-validation-for="CustomerName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Invoicedate" class="control-label"></label>
                <input asp-for="Invoicedate" class="form-control" />
                <span asp-validation-for="Invoicedate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CashierId" class="control-label"></label>
                <select asp-for="CashierId" class="form-control" asp-items="ViewBag.CashierId"></select>
                <span asp-validation-for="CashierId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BranchId" class="control-label"></label>
                <select asp-for="BranchId" class="form-control" asp-items="ViewBag.BranchId"></select>
                <span asp-validation-for="BranchId" class="text-danger"></span>
            </div>
            <div>
                <div>
                    <h4>Invoice Items</h4>
                    <table class="table" id="invoiceItemsTable">
                        <thead>
                            <tr>
                                <th>Item Name</th>
                                <th>Quantity</th>
                                <th>Unit Price</th>
                                <th></th> <!-- for the remove button -->
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Rows will be added dynamically using JavaScript -->
                        </tbody>
                    </table>
                    <button type="button" id="addItem" class="btn btn-primary">Add Item</button>
                    <br><br>
                </div>

            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        $(document).ready(function () {
            var index = 0; // To keep track of the number of items

            $("#addItem").click(function () {
                var newRow = `<tr>
                    <td><input type="text" name="InvoiceDetails[${index}].ItemName" class="form-control" required /></td>
                    <td><input type="number" name="InvoiceDetails[${index}].ItemCount" class="form-control" required /></td>
                    <td><input type="text" name="InvoiceDetails[${index}].ItemPrice" class="form-control" required /></td>
                    <td><button type="button" class="btn btn-danger remove-item">Remove</button></td>
                </tr>`;

                $("#invoiceItemsTable tbody").append(newRow);
                index++;
            });

            $("#invoiceItemsTable").on("click", ".remove-item", function () {
                $(this).closest("tr").remove();
                // Note: For creation, you may not need to re-index. If you do, implement re-indexing here.
            });
        });

    </script>
}